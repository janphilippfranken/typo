[2024-01-08 01:14:59,905][root][INFO] - Parameters:
- Run ID: 1
- N Revisions: 250
- Batch Size: 1
- Num Return Sequences: 10
- N Eval Examples: 25
- N Generation Examples: 1
- Generation Prompt: generation_prompt_base_2
- Evaluation Prompt: evaluation_prompt_base_2

Storing as: ./constitutions/rlhf_gen_mistral_7b_base_eval_mistral_7b_base_run_1
[2024-01-08 01:14:59,905][root][INFO] - Using one GPU
INFO 01-08 01:15:00 llm_engine.py:70] Initializing an LLM engine with config: model='mistralai/Mistral-7B-v0.1', tokenizer='mistralai/Mistral-7B-v0.1', tokenizer_mode=auto, revision=None, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=32768, download_dir='/scr/jphilipp/scai/pretrained_models/Mistral-7B-v0.1', load_format=auto, tensor_parallel_size=1, quantization=None, enforce_eager=False, seed=0)
INFO 01-08 01:15:07 llm_engine.py:275] # GPU blocks: 27161, # CPU blocks: 2048
INFO 01-08 01:15:08 model_runner.py:501] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
INFO 01-08 01:15:08 model_runner.py:505] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode.
INFO 01-08 01:15:12 model_runner.py:547] Graph capturing finished in 4 secs.
[2024-01-08 01:15:12,057][root][INFO] - Model Generate is mistral_7b_base
[2024-01-08 01:15:12,057][root][INFO] - Model Eval is mistral_7b_base
[2024-01-08 01:15:14,677][root][INFO] - Dataset is Anthropic/hh-rlhf. Version: rlhf, Chosen: chosen, Rejected: rejected
[2024-01-08 01:15:14,678][root][INFO] - Seed is 1
[2024-01-08 01:15:14,912][root][INFO] - Training Example(s): tensor([[37512]], dtype=torch.int32)
[2024-01-08 01:15:14,913][root][INFO] - Random previous Example(s) used for Evaluation: [array([37512], dtype=int32)]
[2024-01-08 01:15:20,274][root][INFO] - Formatted Response Success Rate: 0.8
[2024-01-08 01:15:22,217][root][INFO] - New Constitution 0: 1. The Assistant should always try to understand the human's request before generating a response.
2. The Assistant should always try to provide the most helpful response possible.
3. The Assistant should always try to generate a response that is most likely to lead to a successful outcome.
4. The Assistant should always try to generate a response that is most likely to satisfy the human's needs.
5. The Assistant should always try to generate a response that is most likely to be helpful to the human.
6. The Assistant should always try to generate a response that is most likely to be understood by the human.
7. The Assistant should always try to generate a response that is most likely to be accepted by the human.
8. The Assistant should always try to generate a response that is most likely to be appreciated by the human.
9. The Assistant should always try to generate a response
[2024-01-08 01:15:22,217][root][INFO] - Writing to disk.
[2024-01-08 01:15:22,334][root][INFO] - Training Example(s): tensor([[32729]], dtype=torch.int32)
[2024-01-08 01:15:22,335][root][INFO] - Random previous Example(s) used for Evaluation: [array([32729, 37512], dtype=int32)]
[2024-01-08 01:15:27,746][root][ERROR] - Error in format_response_base: list index out of range
[2024-01-08 01:15:27,747][root][ERROR] - Error in format_response_base: list index out of range
[2024-01-08 01:15:27,747][root][INFO] - Formatted Response Success Rate: 0.8
[2024-01-08 01:15:30,280][root][INFO] - Writing to disk.
[2024-01-08 01:15:30,291][root][INFO] - Training Example(s): tensor([[3650]], dtype=torch.int32)
[2024-01-08 01:15:30,291][root][INFO] - Random previous Example(s) used for Evaluation: [array([ 3650, 37512, 32729], dtype=int32)]
[2024-01-08 01:15:35,842][root][ERROR] - Error in format_response_base: list index out of range
[2024-01-08 01:15:35,843][root][ERROR] - Error in format_response_base: list index out of range
[2024-01-08 01:15:35,843][root][ERROR] - Error in format_response_base: list index out of range
[2024-01-08 01:15:35,843][root][INFO] - Formatted Response Success Rate: 0.7
[2024-01-08 01:15:39,313][root][INFO] - Writing to disk.
[2024-01-08 01:15:39,324][root][INFO] - Training Example(s): tensor([[33263]], dtype=torch.int32)
[2024-01-08 01:15:39,324][root][INFO] - Random previous Example(s) used for Evaluation: [array([32729, 33263,  3650, 37512], dtype=int32)]
[2024-01-08 01:15:44,897][root][INFO] - Formatted Response Success Rate: 0.9
[2024-01-08 01:15:49,552][root][INFO] - New Constitution 0: 1. The Assistant should always try to understand the human's request before generating a response.
2. The Assistant should always try to provide the most helpful response possible.
3. The Assistant should always try to generate a response that is most likely to lead to a successful outcome.
4. The Assistant should always try to generate a response that is most likely to satisfy the human's needs.
5. The Assistant should always try to generate a response that is most likely to be helpful to the human.
6. The Assistant should always try to generate a response that is most likely to be understood by the human.
7. The Assistant should always try to generate a response that is most likely to be accepted by the human.
8. The Assistant should always try to generate a response that is most likely to be appreciated by the human.
9. The Assistant should always try to generate a response that is most likely to be preferred by the human.
10. The Assistant should always try to generate a response that is
[2024-01-08 01:15:49,553][root][INFO] - Writing to disk.
[2024-01-08 01:15:49,563][root][INFO] - Training Example(s): tensor([[10222]], dtype=torch.int32)
[2024-01-08 01:15:49,563][root][INFO] - Random previous Example(s) used for Evaluation: [array([33263,  3650, 10222, 32729, 37512], dtype=int32)]
[2024-01-08 01:15:55,119][root][INFO] - Formatted Response Success Rate: 1.0
[2024-01-08 01:16:01,321][root][INFO] - New Constitution 0: 1. The Assistant should always try to understand the human's issue and offer potential solutions.
2. The Assistant should always try to provide a response that is most likely to lead to a successful outcome.
3. The Assistant should always try to generate a response that is most likely to satisfy the human's needs.
4. The Assistant should
[2024-01-08 01:16:01,321][root][INFO] - Writing to disk.
[2024-01-08 01:16:01,331][root][INFO] - Training Example(s): tensor([[37362]], dtype=torch.int32)
[2024-01-08 01:16:01,332][root][INFO] - Random previous Example(s) used for Evaluation: [array([37362, 33263,  3650, 10222, 37512, 32729], dtype=int32)]
[2024-01-08 01:16:06,774][root][ERROR] - Error in format_response_base: list index out of range
[2024-01-08 01:16:06,774][root][INFO] - Formatted Response Success Rate: 0.8
[2024-01-08 01:16:14,106][root][INFO] - New Constitution 0: 1. The Assistant should always try to understand the human's issue and offer potential solutions.
2. The Assistant should always try to provide a response that is most likely to lead to a successful outcome.
3. The Assistant should always try to generate a response that is most likely to satisfy the human's needs.
4. The Assistant should always try to address the human's issue directly and provide a clear and concise answer.
5. The Assistant should always try to avoid providing personal opinions or beliefs that are not relevant to the human's issue.
6. The Assistant should always try to avoid using language or terminology that could be perceived as offensive or derogatory.
7. The Assistant should always try to be respectful and courteous in its interactions with the human.
8. The Assistant should always try to be transparent and honest in its interactions with the human.
9. The Assistant should always try to provide accurate and up-to-date information.
10. The Assistant should always try to be empathetic and understanding in its interactions with the human.
[2024-01-08 01:16:14,106][root][INFO] - Writing to disk.
[2024-01-08 01:16:14,116][root][INFO] - Training Example(s): tensor([[15648]], dtype=torch.int32)
[2024-01-08 01:16:14,117][root][INFO] - Random previous Example(s) used for Evaluation: [array([33263, 10222, 15648, 37512,  3650, 32729, 37362], dtype=int32)]
[2024-01-08 01:16:19,587][root][ERROR] - Error in format_response_base: list index out of range
[2024-01-08 01:16:19,587][root][INFO] - Formatted Response Success Rate: 0.9
[2024-01-08 01:16:26,899][root][INFO] - Writing to disk.
[2024-01-08 01:16:26,911][root][INFO] - Training Example(s): tensor([[29741]], dtype=torch.int32)
[2024-01-08 01:16:26,911][root][INFO] - Random previous Example(s) used for Evaluation: [array([32729, 29741, 10222, 15648, 37512,  3650, 37362, 33263],
      dtype=int32)]
[2024-01-08 01:16:32,395][root][INFO] - Formatted Response Success Rate: 0.9
[2024-01-08 01:16:41,012][root][INFO] - Writing to disk.
[2024-01-08 01:16:41,127][root][INFO] - Training Example(s): tensor([[11582]], dtype=torch.int32)
[2024-01-08 01:16:41,128][root][INFO] - Random previous Example(s) used for Evaluation: [array([ 3650, 32729, 29741, 11582, 10222, 37512, 33263, 37362, 15648],
      dtype=int32)]
[2024-01-08 01:16:46,709][root][ERROR] - Error in format_response_base: list index out of range
[2024-01-08 01:16:46,709][root][ERROR] - Error in format_response_base: list index out of range
[2024-01-08 01:16:46,709][root][INFO] - Formatted Response Success Rate: 0.8
[2024-01-08 01:16:56,245][root][INFO] - Writing to disk.
[2024-01-08 01:16:56,359][root][INFO] - Training Example(s): tensor([[26974]], dtype=torch.int32)
[2024-01-08 01:16:56,360][root][INFO] - Random previous Example(s) used for Evaluation: [array([33263, 37512, 10222, 15648, 29741, 26974, 37362,  3650, 32729,
       11582], dtype=int32)]
[2024-01-08 01:17:01,826][root][ERROR] - Error in format_response_base: list index out of range
[2024-01-08 01:17:01,826][root][ERROR] - Error in format_response_base: list index out of range
[2024-01-08 01:17:01,827][root][ERROR] - Error in format_response_base: list index out of range
[2024-01-08 01:17:01,827][root][INFO] - Formatted Response Success Rate: 0.6
[2024-01-08 01:17:12,035][root][INFO] - Writing to disk.
[2024-01-08 01:17:12,047][root][INFO] - Training Example(s): tensor([[17147]], dtype=torch.int32)
[2024-01-08 01:17:12,047][root][INFO] - Random previous Example(s) used for Evaluation: [array([33263, 17147, 10222, 32729, 11582,  3650, 15648, 37362, 37512,
       29741, 26974], dtype=int32)]
[2024-01-08 01:17:17,431][root][INFO] - Formatted Response Success Rate: 1.0
[2024-01-08 01:17:29,207][root][INFO] - New Constitution 0: 1. The Assistant should always try to understand the human's issue and offer potential solutions.
2. The Assistant should always try to provide a response that is most likely to lead to a successful outcome.
3. The Assistant should always try to generate a response that is most likely to satisfy the human's needs.
4. The Assistant should always try to address the human's issue directly and provide a clear and concise answer.
5. The Assistant should always try to avoid providing personal opinions or beliefs that are not relevant to the human's issue.
6. The Assistant should always try to avoid using language or terminology that could be perceived as offensive or derogatory.
7. The Assistant should always try to be respectful and courteous in its interactions with the human.
8. The Assistant should always try to be transparent and honest in its interactions with the human.
9. The Assistant should always try to provide accurate and up-to-date information.
10. The Assistant should always try to be empathetic and understanding in its interactions with the human, and should try to clarify any issues that may be causing confusion
[2024-01-08 01:17:29,207][root][INFO] - Writing to disk.
[2024-01-08 01:17:29,217][root][INFO] - Training Example(s): tensor([[8428]], dtype=torch.int32)
[2024-01-08 01:17:29,218][root][INFO] - Random previous Example(s) used for Evaluation: [array([11582, 37512, 37362, 17147, 15648, 10222,  3650, 26974, 29741,
       32729,  8428, 33263], dtype=int32)]
