INFO 03-09 09:05:28 config.py:433] Custom all-reduce kernels are temporarily disabled due to stability issues. We will re-enable them once the issues are resolved.
INFO 03-09 09:05:32 llm_engine.py:87] Initializing an LLM engine with config: model='/scr/jphilipp/scai/trained_models/Mistral-7B-v0.1/merged-exp-1/typo-beta-0.1-iteration-2-multi-turn/epoch-0/', tokenizer='/scr/jphilipp/scai/trained_models/Mistral-7B-v0.1/merged-exp-1/typo-beta-0.1-iteration-2-multi-turn/epoch-0/', tokenizer_mode=auto, revision=None, tokenizer_revision=None, trust_remote_code=False, dtype=torch.float16, max_seq_len=32768, download_dir='/scr/jphilipp/scai/trained_models/Mistral-7B-v0.1/merged-exp-1/typo-beta-0.1-iteration-2-multi-turn/epoch-0/', load_format=auto, tensor_parallel_size=4, disable_custom_all_reduce=True, quantization=None, enforce_eager=False, kv_cache_dtype=auto, device_config=cuda, seed=0)
INFO 03-09 09:05:52 llm_engine.py:357] # GPU blocks: 129303, # CPU blocks: 8192
INFO 03-09 09:05:54 model_runner.py:684] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
INFO 03-09 09:05:54 model_runner.py:688] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
