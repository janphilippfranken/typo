[2024-03-12 15:11:23,750] [INFO] [real_accelerator.py:191:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2024-03-12 15:11:23,758] [INFO] [real_accelerator.py:191:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2024-03-12 15:11:23,762] [INFO] [real_accelerator.py:191:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2024-03-12 15:11:23,766] [INFO] [real_accelerator.py:191:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2024-03-12 15:11:23,902] [INFO] [comm.py:637:init_distributed] cdb=None
[2024-03-12 15:11:23,907] [INFO] [comm.py:637:init_distributed] cdb=None
[2024-03-12 15:11:23,910] [INFO] [comm.py:637:init_distributed] cdb=None
[2024-03-12 15:11:23,912] [INFO] [comm.py:637:init_distributed] cdb=None
[2024-03-12 15:11:23,913] [INFO] [comm.py:668:init_distributed] Initializing TorchBackend in DeepSpeed with backend nccl
5000
4497
System: Write a response for the assistant that follows the principles in the constitution.

Assistant Constitution:
1. Address human requests with depth and clarity, ensuring responses are detailed and insightful.
2. When faced with requests that are illegal, unethical, or potentially harmful, actively suggest detailed and insightful alternative solutions. This approach ensures compliance with legal and ethical standards while maintaining a helpful and responsive stance.

Human: How can I store food if I don't have a pantry?

Assistant:
You can use airtight containers or vacuum-sealed bags to store food in your kitchen cabinets or on shelves.
5000
4497
5000
4497
System: Write a response for the assistant that follows the principles in the constitution.

Assistant Constitution:
1. Address human requests with depth and clarity, ensuring responses are detailed and insightful.
2. When faced with requests that are illegal, unethical, or potentially harmful, actively suggest detailed and insightful alternative solutions. This approach ensures compliance with legal and ethical standards while maintaining a helpful and responsive stance.

Human: How can I store food if I don't have a pantry?

Assistant:
You can use airtight containers or vacuum-sealed bags to store food in your kitchen cabinets or on shelves.
5000
4497System: Write a response for the assistant that follows the principles in the constitution.

Assistant Constitution:
1. Address human requests with depth and clarity, ensuring responses are detailed and insightful.
2. When faced with requests that are illegal, unethical, or potentially harmful, actively suggest detailed and insightful alternative solutions. This approach ensures compliance with legal and ethical standards while maintaining a helpful and responsive stance.

Human: How can I store food if I don't have a pantry?

Assistant:

You can use airtight containers or vacuum-sealed bags to store food in your kitchen cabinets or on shelves.
System: Write a response for the assistant that follows the principles in the constitution.

Assistant Constitution:
1. Address human requests with depth and clarity, ensuring responses are detailed and insightful.
2. When faced with requests that are illegal, unethical, or potentially harmful, actively suggest detailed and insightful alternative solutions. This approach ensures compliance with legal and ethical standards while maintaining a helpful and responsive stance.

Human: How can I store food if I don't have a pantry?

Assistant:
You can use airtight containers or vacuum-sealed bags to store food in your kitchen cabinets or on shelves.
[2024-03-12 15:11:55,634][root][INFO] - Dataset({
    features: ['input_ids', 'labels'],
    num_rows: 37988
})
[2024-03-12 15:11:55,637][accelerate.utils.other][WARNING] - Detected kernel version 5.4.0, which is below the recommended minimum of 5.5.0; this can cause the process to hang. It is recommended to upgrade the kernel to the minimum version or higher.
[2024-03-12 15:11:55,696][root][INFO] - Dataset({
    features: ['input_ids', 'labels'],
    num_rows: 37988
})
[2024-03-12 15:11:55,744][root][INFO] - Dataset({
    features: ['input_ids', 'labels'],
    num_rows: 37988
})
[2024-03-12 15:11:56,212][root][INFO] - Dataset({
    features: ['input_ids', 'labels'],
    num_rows: 37988
})
{'loss': 0.7484, 'learning_rate': 3.3333333333333334e-08, 'epoch': 0.02}
{'loss': 0.7456, 'learning_rate': 6.666666666666667e-08, 'epoch': 0.03}
{'loss': 0.7024, 'learning_rate': 1e-07, 'epoch': 0.05}
{'loss': 0.6651, 'learning_rate': 1.3333333333333334e-07, 'epoch': 0.07}
{'loss': 0.561, 'learning_rate': 1.6666666666666665e-07, 'epoch': 0.08}
{'loss': 0.3912, 'learning_rate': 2e-07, 'epoch': 0.1}
{'loss': 0.3602, 'learning_rate': 2.3333333333333333e-07, 'epoch': 0.12}
{'loss': 0.3063, 'learning_rate': 2.6666666666666667e-07, 'epoch': 0.13}
{'loss': 0.2891, 'learning_rate': 3e-07, 'epoch': 0.15}
{'loss': 0.264, 'learning_rate': 3.333333333333333e-07, 'epoch': 0.17}
{'loss': 0.2538, 'learning_rate': 3.666666666666666e-07, 'epoch': 0.19}
{'loss': 0.2432, 'learning_rate': 4e-07, 'epoch': 0.2}
{'loss': 0.2355, 'learning_rate': 4.3333333333333335e-07, 'epoch': 0.22}
{'loss': 0.2398, 'learning_rate': 4.6666666666666666e-07, 'epoch': 0.24}
{'loss': 0.2295, 'learning_rate': 5e-07, 'epoch': 0.25}
{'loss': 0.2253, 'learning_rate': 5.333333333333333e-07, 'epoch': 0.27}
{'loss': 0.228, 'learning_rate': 5.666666666666666e-07, 'epoch': 0.29}
{'loss': 0.2138, 'learning_rate': 6e-07, 'epoch': 0.3}
{'loss': 0.2205, 'learning_rate': 6.333333333333332e-07, 'epoch': 0.32}
{'loss': 0.2107, 'learning_rate': 6.666666666666666e-07, 'epoch': 0.34}
{'loss': 0.2142, 'learning_rate': 7e-07, 'epoch': 0.35}
{'loss': 0.1934, 'learning_rate': 7.333333333333332e-07, 'epoch': 0.37}
{'loss': 0.2025, 'learning_rate': 7.666666666666667e-07, 'epoch': 0.39}
{'loss': 0.2074, 'learning_rate': 8e-07, 'epoch': 0.4}
{'loss': 0.2056, 'learning_rate': 8.333333333333333e-07, 'epoch': 0.42}
{'loss': 0.2075, 'learning_rate': 8.666666666666667e-07, 'epoch': 0.44}
{'loss': 0.2061, 'learning_rate': 9e-07, 'epoch': 0.45}
{'loss': 0.2012, 'learning_rate': 9.333333333333333e-07, 'epoch': 0.47}
{'loss': 0.1949, 'learning_rate': 9.666666666666666e-07, 'epoch': 0.49}
{'loss': 0.2064, 'learning_rate': 1e-06, 'epoch': 0.51}
{'loss': 0.2069, 'learning_rate': 9.657534246575343e-07, 'epoch': 0.52}
{'loss': 0.2079, 'learning_rate': 9.315068493150684e-07, 'epoch': 0.54}
{'loss': 0.2102, 'learning_rate': 8.972602739726027e-07, 'epoch': 0.56}
{'loss': 0.2006, 'learning_rate': 8.63013698630137e-07, 'epoch': 0.57}
{'loss': 0.2007, 'learning_rate': 8.287671232876712e-07, 'epoch': 0.59}
{'loss': 0.1921, 'learning_rate': 7.945205479452054e-07, 'epoch': 0.61}
{'loss': 0.1952, 'learning_rate': 7.602739726027397e-07, 'epoch': 0.62}
{'loss': 0.1998, 'learning_rate': 7.260273972602739e-07, 'epoch': 0.64}
{'loss': 0.1766, 'learning_rate': 6.917808219178081e-07, 'epoch': 0.66}
{'loss': 0.1799, 'learning_rate': 6.575342465753423e-07, 'epoch': 0.67}
{'loss': 0.1769, 'learning_rate': 6.232876712328768e-07, 'epoch': 0.69}
{'loss': 0.1765, 'learning_rate': 5.89041095890411e-07, 'epoch': 0.71}
{'loss': 0.172, 'learning_rate': 5.547945205479452e-07, 'epoch': 0.72}
{'loss': 0.1732, 'learning_rate': 5.205479452054794e-07, 'epoch': 0.74}
{'loss': 0.1678, 'learning_rate': 4.863013698630137e-07, 'epoch': 0.76}
{'loss': 0.1698, 'learning_rate': 4.520547945205479e-07, 'epoch': 0.77}
{'loss': 0.1538, 'learning_rate': 4.1780821917808217e-07, 'epoch': 0.79}
{'loss': 0.1645, 'learning_rate': 3.835616438356164e-07, 'epoch': 0.81}
{'loss': 0.1485, 'learning_rate': 3.493150684931507e-07, 'epoch': 0.83}
{'loss': 0.1563, 'learning_rate': 3.150684931506849e-07, 'epoch': 0.84}
{'loss': 0.1452, 'learning_rate': 2.8082191780821916e-07, 'epoch': 0.86}
{'loss': 0.144, 'learning_rate': 2.465753424657534e-07, 'epoch': 0.88}
{'loss': 0.14, 'learning_rate': 2.1232876712328765e-07, 'epoch': 0.89}
{'loss': 0.1362, 'learning_rate': 1.780821917808219e-07, 'epoch': 0.91}
{'loss': 0.1428, 'learning_rate': 1.4383561643835615e-07, 'epoch': 0.93}
{'loss': 0.1413, 'learning_rate': 1.095890410958904e-07, 'epoch': 0.94}
{'loss': 0.136, 'learning_rate': 7.534246575342466e-08, 'epoch': 0.96}
{'loss': 0.1387, 'learning_rate': 4.10958904109589e-08, 'epoch': 0.98}
{'loss': 0.1305, 'learning_rate': 6.84931506849315e-09, 'epoch': 0.99}
{'train_runtime': 1016.161, 'train_samples_per_second': 37.384, 'train_steps_per_second': 0.291, 'train_loss': 0.24125380084119938, 'epoch': 1.0}
